/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
    ListNode * result = new ListNode(-1); // result is the output list
    ListNode * current = result; // current is used to loop over the result list
    int carry=0;
    int n1, n2;
    while(l1 || l2){
        if(l1){
            n1 = l1->val;
        }
        else{
            n1 = 0;
        }
        if(l2){
            n2 = l2->val;
        }
        else{
            n2 = 0;
        }
        int sum = n1 + n2 + carry;
        carry = sum/10;
        current->next = new ListNode(sum%10);
        current = current->next;
        if(l1){
            l1 = l1->next;
        }
        if(l2){
            l2 = l2->next;
        }
        
    }
 if(carry){
      current->next = new ListNode(1);   //if carry>0 then put carry at new created last node.
 }
 return result->next;
    }
};
